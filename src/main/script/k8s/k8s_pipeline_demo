#!/usr/bin/env groovy
def label = "ircloud-media-api-v2-build"

podTemplate(cloud: 'kubernetes', label: label,yaml: """
apiVersion: v1
kind: Pod
metadata:
  name: ircloud-media-api-v2-build
  labels:
    label: ircloud-media-api-v2-build
  annotations:
    sidecar.istio.io/inject: false
spec:
  volumes:
  - name: harbor-password
    secret:
      secretName: harbor-info
      items:
      - key: password
        path: password.txt
        mode: 111
  - name: jenkins-home
    persistentVolumeClaim:
      claimName: opspvc
  - hostPath:
      path: /root/.m2/repository
    name: maven-repository
  - hostPath:
      path: /var/run/docker.sock
    name: docker-sock
  - hostPath:
      path: /root/.kube
    name: kube-config
  - hostPath:
      path: /etc/docker/daemon.json
    name: docker-daemon
  hostAliases:
  - hostnames:
    - xxx.xxx.com
    ip: xxx.xxx.xxx.xxx
  containers:
  - name: maven
    image: 10.110.91.244:8000/common/maven:3.6.0-jdk-8
    command:
    - cat
    tty: true
    volumeMounts:
    - mountPath: /root/.m2/
      name: maven-repository
  - name: docker
    image: ip:port/common/docker:1.39
    command:
    - cat
    tty: true
    env:
    - name: HARBOR_USERNAME
      valueFrom:
        secretKeyRef:
          name: harbor-info
          key: username
    - name: HARBOR_REGISTRY_URL
      valueFrom:
        secretKeyRef:
          name: harbor-info
          key: registryUrl
    volumeMounts:
    - mountPath: /var/run/docker.sock
      name: docker-sock
    - mountPath: /etc/docker/daemon.json
      name: docker-daemon
    - name: harbor-password
      mountPath: /harbor
  - name: kubectl
    image: ip:8000/common/k8s-kubectl
    command:
    - cat
    tty: true
    volumeMounts:
    - mountPath: /root/.kube
      name: kube-config
"""
) {

    node(label) {
        container('maven') {
            stage('checkoutAndBuild') {
//                checkout scm
                checkout([$class: 'GitSCM', branches: [[name: 'origin/prod']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '15b04fb0-129e-4655-b7a9-6be173b38fd3', url: 'https://stonehouse.irs01.cn/ircloud/ircloud-media-api-v2.git']]])
                sh 'pwd'
                sh 'mvn clean package -Dmaven.test.skip=true'
            }
        }
        container('docker') {
            stage('docker-login') {
                //REGISTRY_URL私有仓库地址，也可使用官方地址：docker.io
                sh 'cat /harbor/password.txt | docker login $HARBOR_REGISTRY_URL --username $HARBOR_USERNAME --password-stdin'
            }

            stage('docker-build') {
                sh '''
cat >docker-entrypoint.sh <<EOF
#!/bin/bash

JAVA_OPTS="\\${JAVA_OPTS} -Djava.awt.headless=true -Duser.timezone=GMT+08 -Dfile.encoding=UTF-8 -Dlog4j2.formatMsgNoLookups=true"
JAVA_OPTS="\\${JAVA_OPTS} -XX:-OmitStackTraceInFastThrow -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=${BASE_DIR}/logs/java_heapdump.hprof"
JAVA_OPTS="\\${JAVA_OPTS} -XX:-UseLargePages"
JAVA_OPTS="\\${JAVA_OPTS} -Xloggc:${BASE_DIR}/logs/gc.log -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=10 -XX:GCLogFileSize=100M"
JAVA_OPTS="\\${JAVA_OPTS} -jar ${BASE_DIR}/ircloud-media-api-v2.jar"
JAVA_OPTS="\\${JAVA_OPTS} \\${JAVA_OPTS_EXT}"
JAVA_OPTS="\\${JAVA_OPTS} --server.max-http-header-size=524288"
java \\${JAVA_OPTS}
EOF
                    '''
                sh '''
cat >Dockerfile <<EOF
# base image
FROM ip:8000/common/openjdk:8-jdk

# MAINTAINER
MAINTAINER zhangbing@iresearch.com.cn

#开启8080端口
EXPOSE 8080

# add war
ADD target/ircloud-media-api-v2.jar /

ADD docker-entrypoint.sh /docker-entrypoint.sh
RUN chmod 775 /docker-entrypoint.sh

#当启动容器时执行的脚本文件
CMD ["/docker-entrypoint.sh"]
EOF
                    '''

                sh 'docker build . -t $HARBOR_REGISTRY_URL/ircloud/ircloud-media-api-v2-prod'
            }

            stage('docker-push') {
                sh 'docker push $HARBOR_REGISTRY_URL/ircloud/ircloud-media-api-v2-prod'
            }

            stage('docker-remove') {
                sh 'docker rmi $HARBOR_REGISTRY_URL/ircloud/ircloud-media-api-v2-prod'
            }
        }

        container('kubectl') {
            stage('k8s deploy') {
                sh '''
cat >deploy-svc.yaml <<EOF
apiVersion: v1
kind: Service
metadata:
  name: ircloud-media-api-v2-svc
  labels:
    name: ircloud-media-api-v2-svc
  namespace: prod
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
    nodePort: 31001
  type: NodePort
  selector:
    app: ircloud-media-api-v2
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ircloud-media-api-ingress
  namespace: prod
spec:
  rules:
  - host: xxx.xxx.cn
    http:
      paths:
      - backend:
          serviceName: ircloud-media-api-v2-svc
          servicePort: 8080
        path: /ircloud-media-api
status:
  loadBalancer: {}
EOF
                '''
                sh "kubectl --kubeconfig=/root/.kube/config apply -f deploy-svc.yaml"
                sh '''
cat >deploy-app.yaml <<EOF
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ircloud-media-api-v2
  namespace: prod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ircloud-media-api-v2
  template:
    metadata:
      labels:
        app: ircloud-media-api-v2
    spec:
      containers:
      - name: ircloud-media-api-v2
        image: 10.110.91.244:8000/ircloud/ircloud-media-api-v2-prod
        imagePullPolicy: Always
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
        ports:
        - containerPort: 8080
        env:
          - name: JAVA_OPTS
            value: -server -Xms2G -Xmx2G -Xmn1G -XX:MetaspaceSize=128M -XX:MaxMetaspaceSize=320M
          - name: JAVA_OPTS_EXT
            value: --spring.profiles.active=prod
          - name: BASE_DIR
            value:
        readinessProbe:
          httpGet:
            port: 8080
            path: /ircloud-media-api/actuator/health
          initialDelaySeconds: 60
          timeoutSeconds: 3
        livenessProbe:
          httpGet:
            port: 8080
            path: /ircloud-media-api/actuator/health
          initialDelaySeconds: 60
          timeoutSeconds: 3
      imagePullSecrets:
      - name: ircloud-harbor-secret
EOF
                '''
                sh "cat  deploy-app.yaml"
                sh "kubectl --kubeconfig=/root/.kube/config replace --force -f deploy-app.yaml"
            }
        }
    }
}


// vim: ft=groovy